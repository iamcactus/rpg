/*
 * Transaction process for registration
 * 2013-2014
 * @iamcactus
 */
var logger = require('pomelo-logger').getLogger(__filename);
var async = require('async');
var loginDao = require('../dao/loginDao');

var registTrans = module.exports;

/**
 * Create a new user
 * @param {String} deviceInfo   unique string generated by app/apk
 * @param {String} loginName    account 
 * @param {String} passwordHash encrypted password
 */
registTrans.regist = function(mysqlc, uid, deviceInfo, loginName, passwordHash, cb) {
  mysqlc.query('BEGIN', function(err, rows) { // start TRANSACTION
    if (err) {
      cb(err, null);
      return;
    }
    async.auto({
      registration: function(callback) {
        loginDao.createUser(mysqlc, uid, deviceInfo, loginName, passwordHash, callback);
      }
    }, function(err, res) {
      var q; // query cmd
      if (err || !res) {
        q = 'ROLLBACK';
      }
      else {
        q = 'COMMIT';
      }
      mysqlc.query(q, function(err1, res1) {
        if (err1) {
          cb(err1, null);
          return;
        }
        else {
          if (err) {
            console.log('[regist] transaction query failed');
            cb(err, null);
            return;
          }
          else {
            console.log('[regist] transaction query finished');
            cb(null, res);
            return;
          }
        }
      }); // end of mysqlc.query
    }); // end of async.auto
  }); // end TRANSACTION
};
